<?xml version='1.0' encoding='UTF-8'?>
<document>
			<nodes><node type="predefined" title="Source xyz" id="31">
						<pos x="-887" y="86"></pos>
						
						<sliders>
							
						</sliders>
		
						<intypes>
							
						</intypes>
		
						<functions>
							<function name="srcxyzx_t1310432334" outname="x" outtype="Float">source.x</function><function name="srcxyzy_t1310432334" outname="y" outtype="Float">source.y</function><function name="srcxyzz_t1310432334" outname="z" outtype="Float">source.z</function>
						</functions>
					</node><node type="predefined" title="Material Stone" id="26">
						<pos x="-563" y="165"></pos>
						
						<sliders>
							
						</sliders>
		
						<intypes>
							
						</intypes>
		
						<functions>
							<function name="matstone_t1310432334" outname=" " outtype="Material">Material(0x373737)</function>
						</functions>
					</node><node type="predefined" title="Product" id="2">
						<pos x="28" y="351"></pos>
						
						<sliders>
							
						</sliders>
		
						<intypes>
							<intype type="xs:Seq[Float]=Nil"></intype>
						</intypes>
		
						<functions>
							<function name="product_t1310342203_t1310432334" outname=" " outtype="Float">xs.product</function>
						</functions>
					</node><node type="predefined" title="Material Threshold" id="19">
						<pos x="-7" y="-52"></pos>
						
						<sliders>
							<slider name="threshold" value="50"></slider>
						</sliders>
		
						<intypes>
							<intype type="x:Material=Material(0xFFFFFF)"></intype><intype type="t:Float"></intype><intype type="y:Material=Material(0)"></intype>
						</intypes>
		
						<functions>
							<function name="matthreshold_t1310432334" outname=" " outtype="Material">if(t &gt; (threshold-0.5f)*2f) x else y</function>
						</functions>
					</node><node type="custom" title="Custom" id="1">
						<pos x="-317" y="384"></pos>
						<size width="290" height="257"></size>
						<sliders>
							<slider name="s1" value="15"></slider><slider name="s2" value="74"></slider><slider name="s3" value="50"></slider><slider name="s4" value="50"></slider>
						</sliders>
		
						<intypes>
							<intype type="a:Float"></intype><intype type="b:Float"></intype><intype type="c:Float"></intype><intype type="d:Float"></intype>
						</intypes>
		
						<functions>
							<function name="custom_f1_t1310432334" outname=" " outtype="Float">s2 * ( if(abs(s1 * a)&gt;Pi) 0 else cos(s1 * a) + 1 )</function>
						</functions>
					</node><node type="predefined" title="Material Gold" id="27">
						<pos x="-584" y="15"></pos>
						
						<sliders>
							
						</sliders>
		
						<intypes>
							
						</intypes>
		
						<functions>
							<function name="matgold_t1310432334" outname=" " outtype="Material">Material(0xfab614)</function>
						</functions>
					</node><node type="predefined" title="Material Earth" id="8">
						<pos x="34" y="238"></pos>
						
						<sliders>
							
						</sliders>
		
						<intypes>
							
						</intypes>
		
						<functions>
							<function name="matearth_t1310432334" outname=" " outtype="Material">Material(0x5a3910)</function>
						</functions>
					</node><node type="predefined" title="Feature Source" id="6">
						<pos x="-436" y="204"></pos>
						
						<sliders>
							<slider name="scale" value="60"></slider><slider name="x" value="47"></slider><slider name="y" value="45"></slider><slider name="z" value="50"></slider>
						</sliders>
		
						<intypes>
							
						</intypes>
		
						<functions>
							<function name="srcv1308700001_1308700798_t1309182284_t1310342203_t1310432334" outname="v" outtype="Vec3">(source + (Vec3(x,y,z)-0.5f)*256f) * (pow(256,((0.5f-scale)*2f)))</function><function name="srcx1308700001_1308700798_t1309182284_t1310342203_t1310432334" outname="x" outtype="Float">(source.x + (x-0.5f)*256f) * (pow(256,((0.5f-scale)*2f)))</function><function name="srcy1308700001_1308700798_t1309182284_t1310342203_t1310432334" outname="y" outtype="Float">(source.y + (y-0.5f)*256f) * (pow(256,((0.5f-scale)*2f)))</function><function name="srcz1308700001_1308700798_t1309182284_t1310342203_t1310432334" outname="z" outtype="Float">(source.z + (z-0.5f)*256f) * (pow(256,((0.5f-scale)*2f)))</function>
						</functions>
					</node><node type="predefined" title="Material Threshold" id="25">
						<pos x="-423" y="62"></pos>
						
						<sliders>
							<slider name="threshold" value="50"></slider>
						</sliders>
		
						<intypes>
							<intype type="x:Material=Material(0xFFFFFF)"></intype><intype type="t:Float"></intype><intype type="y:Material=Material(0)"></intype>
						</intypes>
		
						<functions>
							<function name="matthreshold_t1310432334" outname=" " outtype="Material">if(t &gt; (threshold-0.5f)*2f) x else y</function>
						</functions>
					</node><node type="predefined" title="Material Gravel" id="20">
						<pos x="-214" y="-169"></pos>
						
						<sliders>
							
						</sliders>
		
						<intypes>
							
						</intypes>
		
						<functions>
							<function name="matgravel_t1310432334" outname=" " outtype="Material">Material(0x282828)</function>
						</functions>
					</node><node type="predefined" title="Noise xyz" id="16">
						<pos x="38" y="110"></pos>
						
						<sliders>
							<slider name="size" value="50"></slider><slider name="outscale" value="50"></slider><slider name="outoffset" value="50"></slider>
						</sliders>
		
						<intypes>
							<intype type="x:Float"></intype><intype type="y:Float"></intype><intype type="z:Float"></intype>
						</intypes>
		
						<functions>
							<function name="noise3_t1310432334" outname=" " outtype="Float">
			val v = Vec3(x,y,z)
			val invexpsize = pow(256,((0.5f-size)*2f))
			val expoutscale = pow(256,((outscale-0.5f)*2f))/invexpsize
			val linearoutoffset = (outoffset-0.5f)*2f
			(noise1(v*invexpsize)+linearoutoffset)*expoutscale
			</function>
						</functions>
					</node><node type="preview" title="Preview" id="5">
						<pos x="686" y="-31"></pos>
						<size width="669" height="567"></size><image offsety="-67.219154" offsetx="-86.44031" zoom="0.28531176"></image><view selected="iso"></view><zslider value="43.999996"></zslider>
						<sliders>
							
						</sliders>
		
						<intypes>
							<intype type="d:Float"></intype><intype type="m:Material"></intype>
						</intypes>
		
						<functions>
							
						</functions>
					</node><node type="predefined" title="Source xyz" id="23">
						<pos x="-492" y="-83"></pos>
						
						<sliders>
							
						</sliders>
		
						<intypes>
							
						</intypes>
		
						<functions>
							<function name="srcxyzx_t1310432334" outname="x" outtype="Float">source.x</function><function name="srcxyzy_t1310432334" outname="y" outtype="Float">source.y</function><function name="srcxyzz_t1310432334" outname="z" outtype="Float">source.z</function>
						</functions>
					</node><node type="custom" title="Custom" id="7">
						<pos x="446" y="-15"></pos>
						<size width="230" height="191"></size>
						<sliders>
							<slider name="s1" value="50"></slider><slider name="s2" value="50"></slider><slider name="s3" value="50"></slider><slider name="s4" value="50"></slider>
						</sliders>
		
						<intypes>
							<intype type="a:Float"></intype><intype type="b:Float"></intype><intype type="c:Float"></intype><intype type="d:Float"></intype>
						</intypes>
		
						<functions>
							<function name="custom_f7_t1310432334" outname=" " outtype="Float">1f</function>
						</functions>
					</node><node type="predefined" title="Material Threshold" id="10">
						<pos x="278" y="175"></pos>
						
						<sliders>
							<slider name="threshold" value="52"></slider>
						</sliders>
		
						<intypes>
							<intype type="x:Material=Material(0xFFFFFF)"></intype><intype type="t:Float"></intype><intype type="y:Material=Material(0)"></intype>
						</intypes>
		
						<functions>
							<function name="matthreshold_t1310432334" outname=" " outtype="Material">if(t &gt; (threshold-0.5f)*2f) x else y</function>
						</functions>
					</node><node type="predefined" title="Noise xyz" id="22">
						<pos x="-395" y="-79"></pos>
						
						<sliders>
							<slider name="size" value="48"></slider><slider name="outscale" value="50"></slider><slider name="outoffset" value="50"></slider>
						</sliders>
		
						<intypes>
							<intype type="x:Float"></intype><intype type="y:Float"></intype><intype type="z:Float"></intype>
						</intypes>
		
						<functions>
							<function name="noise3_t1310432334" outname=" " outtype="Float">
			val v = Vec3(x,y,z)
			val invexpsize = pow(256,((0.5f-size)*2f))
			val expoutscale = pow(256,((outscale-0.5f)*2f))/invexpsize
			val linearoutoffset = (outoffset-0.5f)*2f
			(noise1(v*invexpsize)+linearoutoffset)*expoutscale
			</function>
						</functions>
					</node><node type="predefined" title="Material Threshold" id="9">
						<pos x="452" y="322"></pos>
						
						<sliders>
							<slider name="threshold" value="0"></slider>
						</sliders>
		
						<intypes>
							<intype type="x:Material=Material(0xFFFFFF)"></intype><intype type="t:Float"></intype><intype type="y:Material=Material(0)"></intype>
						</intypes>
		
						<functions>
							<function name="matthreshold_t1310432334" outname=" " outtype="Material">if(t &gt; (threshold-0.5f)*2f) x else y</function>
						</functions>
					</node><node type="predefined" title="Sum" id="3">
						<pos x="151" y="339"></pos>
						
						<sliders>
							
						</sliders>
		
						<intypes>
							<intype type="xs:Seq[Float]=Nil"></intype>
						</intypes>
		
						<functions>
							<function name="sum_t1310342203_t1310432334" outname=" " outtype="Float">xs.sum</function>
						</functions>
					</node><node type="predefined" title="Feature Noise" id="4">
						<pos x="-174" y="156"></pos>
						
						<sliders>
							<slider name="size" value="57"></slider><slider name="scale" value="63"></slider><slider name="offset" value="50"></slider>
						</sliders>
		
						<intypes>
							<intype type="v:Seq[Vec3]=Seq(Vec3(0))"></intype><intype type="x:Seq[Float]=Nil"></intype><intype type="y:Seq[Float]=Nil"></intype><intype type="z:Seq[Float]=Nil"></intype><intype type="add:Seq[Float]=Nil"></intype><intype type="sub:Seq[Float]=Nil"></intype>
						</intypes>
		
						<functions>
							<function name="fnoise_1308700798_t1309182284_t1310342203_t1310432334" outname=" " outtype="Float">
			val invexpsize = pow(256,((0.5f-size)*2f))
			val expoutscale = pow(256,((scale-0.5f)*2f))/invexpsize
			val linearoutoffset = (offset-0.5f)*2f
			val sumv = v.reduce( (x,y) =&gt; x+y ) + Vec3(x.sum,y.sum,z.sum);
			(noise1(sumv*invexpsize)+linearoutoffset)*expoutscale + add.sum - sub.sum
			</function>
						</functions>
					</node><node type="predefined" title="Noise xyz" id="28">
						<pos x="-785" y="83"></pos>
						
						<sliders>
							<slider name="size" value="14"></slider><slider name="outscale" value="50"></slider><slider name="outoffset" value="50"></slider>
						</sliders>
		
						<intypes>
							<intype type="x:Float"></intype><intype type="y:Float"></intype><intype type="z:Float"></intype>
						</intypes>
		
						<functions>
							<function name="noise3_t1310432334" outname=" " outtype="Float">
			val v = Vec3(x,y,z)
			val invexpsize = pow(256,((0.5f-size)*2f))
			val expoutscale = pow(256,((outscale-0.5f)*2f))/invexpsize
			val linearoutoffset = (outoffset-0.5f)*2f
			(noise1(v*invexpsize)+linearoutoffset)*expoutscale
			</function>
						</functions>
					</node></nodes>
			<connections><connection>
						<in nodeid="16" connector="1"></in>
						<out nodeid="6" connector="2"></out>
					</connection><connection>
						<in nodeid="9" connector="1"></in>
						<out nodeid="3" connector="0"></out>
					</connection><connection>
						<in nodeid="9" connector="0"></in>
						<out nodeid="10" connector="0"></out>
					</connection><connection>
						<in nodeid="25" connector="0"></in>
						<out nodeid="27" connector="0"></out>
					</connection><connection>
						<in nodeid="19" connector="1"></in>
						<out nodeid="22" connector="0"></out>
					</connection><connection>
						<in nodeid="28" connector="0"></in>
						<out nodeid="31" connector="0"></out>
					</connection><connection>
						<in nodeid="22" connector="1"></in>
						<out nodeid="23" connector="1"></out>
					</connection><connection>
						<in nodeid="1" connector="0"></in>
						<out nodeid="6" connector="1"></out>
					</connection><connection>
						<in nodeid="19" connector="2"></in>
						<out nodeid="25" connector="0"></out>
					</connection><connection>
						<in nodeid="1" connector="2"></in>
						<out nodeid="6" connector="3"></out>
					</connection><connection>
						<in nodeid="19" connector="0"></in>
						<out nodeid="20" connector="0"></out>
					</connection><connection>
						<in nodeid="25" connector="1"></in>
						<out nodeid="28" connector="0"></out>
					</connection><connection>
						<in nodeid="5" connector="0"></in>
						<out nodeid="7" connector="0"></out>
					</connection><connection>
						<in nodeid="10" connector="2"></in>
						<out nodeid="8" connector="0"></out>
					</connection><connection>
						<in nodeid="16" connector="0"></in>
						<out nodeid="6" connector="1"></out>
					</connection><connection>
						<in nodeid="2" connector="0"></in>
						<out nodeid="4" connector="0"></out>
					</connection><connection>
						<in nodeid="10" connector="1"></in>
						<out nodeid="16" connector="0"></out>
					</connection><connection>
						<in nodeid="4" connector="0"></in>
						<out nodeid="6" connector="0"></out>
					</connection><connection>
						<in nodeid="1" connector="1"></in>
						<out nodeid="6" connector="2"></out>
					</connection><connection>
						<in nodeid="22" connector="0"></in>
						<out nodeid="23" connector="0"></out>
					</connection><connection>
						<in nodeid="28" connector="1"></in>
						<out nodeid="31" connector="1"></out>
					</connection><connection>
						<in nodeid="5" connector="1"></in>
						<out nodeid="9" connector="0"></out>
					</connection><connection>
						<in nodeid="10" connector="0"></in>
						<out nodeid="19" connector="0"></out>
					</connection><connection>
						<in nodeid="3" connector="0"></in>
						<out nodeid="2" connector="0"></out>
					</connection><connection>
						<in nodeid="3" connector="0"></in>
						<out nodeid="6" connector="2"></out>
					</connection><connection>
						<in nodeid="25" connector="2"></in>
						<out nodeid="26" connector="0"></out>
					</connection><connection>
						<in nodeid="2" connector="0"></in>
						<out nodeid="1" connector="0"></out>
					</connection></connections>
		</document>