<?xml version='1.0' encoding='UTF-8'?>
<document>
			<module name="GameEngine"></module>
			<nodes><node type="preview" title="Preview" id="3">
						<location x="564" y="3"></location>
						<size width="388" height="383"></size><image offsety="-78.94714202508949" offsetx="-918.2758993557544" zoom="0.6115909044841464"></image><view mode="iso" perspective="sideview_zup"></view><depthslider value="50.24061376757724"></depthslider><grid selected="true"></grid><continous selected="false"></continous>
						<arguments><language name="scala"><argument name="d" datatype="Double"></argument><argument name="m" datatype="Material"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="result_uid4ebd6b9d" returntype="(Double, Material)" outname="result">(d,m)</function></language></functions>
					</node><node type="predefined" title="a - b" id="20">
						<location x="392" y="238"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2_uid4ebd6b9d" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2_uid4ebd6b9d" returntype="float" outname="o">return a-b;</function></language><language name="prediction"><function name="diff2_uid4ebd6b9d" returntype="Interval" outname="o">a-b</function></language></functions>
					</node><node type="predefined" title="a - b" id="15">
						<location x="270" y="124"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2_uid4ebd6b9d" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2_uid4ebd6b9d" returntype="float" outname="o">return a-b;</function></language><language name="prediction"><function name="diff2_uid4ebd6b9d" returntype="Interval" outname="o">a-b</function></language></functions>
					</node><node type="predefined" title="Linear slider: Scalar" id="21">
						<location x="219" y="331"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="value" formula="s*2-1" value="74"></slider><slider name="scale" formula="pow(256, s*2-1)" value="46"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="linearconstant_uid4ebd6b9d" returntype="Double" outname="o">value*scale</function></language><language name="glsl"><function name="linearconstant_uid4ebd6b9d" returntype="float" outname="o">return value*scale;</function></language><language name="prediction"><function name="linearconstant_uid4ebd6b9d" returntype="Interval" outname="o">Interval(value*scale)</function></language></functions>
					</node><node type="predefined" title="a - b" id="6">
						<location x="92" y="272"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2_uid4ebd6b9d" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2_uid4ebd6b9d" returntype="float" outname="o">return a-b;</function></language><language name="prediction"><function name="diff2_uid4ebd6b9d" returntype="Interval" outname="o">a-b</function></language></functions>
					</node><node type="predefined" title="soil" id="18">
						<location x="59" y="470"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matsoil_uid4ebd6b9d" returntype="Material" outname="m">Material(-6649231,2)</function></language><language name="glsl"><function name="matsoil_uid4ebd6b9d" returntype="vec4" outname="m">return vec4(-0,398438, 0,539063, 0,441406, 0);</function></language></functions>
					</node><node type="predefined" title="Mix Materials" id="17">
						<location x="348" y="448"></location>
						
						<arguments><language name="scala"><argument name="m1" datatype="Material"></argument><argument name="t" datatype="Double"></argument><argument name="m2" datatype="Material"></argument></language><language name="glsl"><argument name="m1" datatype="vec4"></argument><argument name="t" datatype="float"></argument><argument name="m2" datatype="vec4"></argument></language></arguments>

						<sliders>
							<slider name="shift" formula="val s1 = (s*2-1); if(s1 &gt;= 0) pow(257, s1)-1 else 1-pow(257, -s1)" value="50"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="matmix_uid4ebd6b9d" returntype="Material" outname="m">if(t &gt;= shift) m1 else m2</function></language><language name="glsl"><function name="matmix_uid4ebd6b9d" returntype="vec4" outname="m">return t &gt;= shift ? m1 : m2;</function></language></functions>
					</node><node type="predefined" title="gold" id="14">
						<location x="78" y="562"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matgold_uid4ebd6b9d" returntype="Material" outname="m">Material(-5732529,3)</function></language><language name="glsl"><function name="matgold_uid4ebd6b9d" returntype="vec4" outname="m">return vec4(-0,343750, 0,527344, 0,308594, 0);</function></language></functions>
					</node><node type="predefined" title="Extract Vec4" id="5">
						<location x="-55" y="287"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec4"></argument></language><language name="prediction"><argument name="v" datatype="Interval4D"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="vec4x_uid4ebd6b9d" returntype="Double" outname="x">v.x</function><function name="vec4y_uid4ebd6b9d" returntype="Double" outname="y">v.y</function><function name="vec4z_uid4ebd6b9d" returntype="Double" outname="z">v.z</function><function name="vec4w_uid4ebd6b9d" returntype="Double" outname="w">v.w</function></language><language name="prediction"><function name="vec4x_uid4ebd6b9d" returntype="Interval" outname="x">v.x</function><function name="vec4y_uid4ebd6b9d" returntype="Interval" outname="y">v.y</function><function name="vec4z_uid4ebd6b9d" returntype="Interval" outname="z">v.z</function><function name="vec4w_uid4ebd6b9d" returntype="Interval" outname="w">v.w</function></language></functions>
					</node><node type="predefined" title="Linear slider: Scalar" id="9">
						<location x="-176" y="133"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="value" formula="s*2-1" value="68"></slider><slider name="scale" formula="pow(256, s*2-1)" value="51"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="linearconstant_uid4ebd6b9d" returntype="Double" outname="o">value*scale</function></language><language name="glsl"><function name="linearconstant_uid4ebd6b9d" returntype="float" outname="o">return value*scale;</function></language><language name="prediction"><function name="linearconstant_uid4ebd6b9d" returntype="Interval" outname="o">Interval(value*scale)</function></language></functions>
					</node><node type="predefined" title="World coordinates" id="1">
						<location x="-381" y="239"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="scale" formula="pow(256, 1-s*2)" value="81"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="scalesrcv_uid4ebd6b9d" returntype="Vec3" outname="v">world   * scale</function><function name="scalesrcx_uid4ebd6b9d" returntype="Double" outname="x">world.x * scale</function><function name="scalesrcy_uid4ebd6b9d" returntype="Double" outname="y">world.y * scale</function><function name="scalesrcz_uid4ebd6b9d" returntype="Double" outname="z">world.z * scale</function></language><language name="glsl"><function name="scalesrcv_uid4ebd6b9d" returntype="vec3" outname="v">return world.xyz * scale;</function><function name="scalesrcx_uid4ebd6b9d" returntype="float" outname="x">return world.x * scale;</function><function name="scalesrcy_uid4ebd6b9d" returntype="float" outname="y">return world.y * scale;</function><function name="scalesrcz_uid4ebd6b9d" returntype="float" outname="z">return world.z * scale;</function></language><language name="prediction"><function name="scalesrcv_uid4ebd6b9d" returntype="Volume" outname="v">world   * scale</function><function name="scalesrcx_uid4ebd6b9d" returntype="Interval" outname="x">world.x * scale</function><function name="scalesrcy_uid4ebd6b9d" returntype="Interval" outname="y">world.y * scale</function><function name="scalesrcz_uid4ebd6b9d" returntype="Interval" outname="z">world.z * scale</function></language></functions>
					</node><node type="predefined" title="a * Exp Slider" id="16">
						<location x="36" y="162"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256, s*2-1)" value="62"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="multiplyconstantexp_uid4ebd6b9d" returntype="Double" outname="o">a*value</function></language><language name="glsl"><function name="multiplyconstantexp_uid4ebd6b9d" returntype="float" outname="o">return a*value;</function></language><language name="prediction"><function name="multiplyconstantexp_uid4ebd6b9d" returntype="Interval" outname="o">a*value</function></language></functions>
					</node><node type="predefined" title="3D Worley Noise" id="2">
						<location x="-186" y="277"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument></language><language name="prediction"><argument name="v" datatype="Volume"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="worleynoise3_uid4ebd6b9d" returntype="Vec4" outname="v4">cellnoise(v)</function></language><language name="prediction"><function name="worleynoise3_uid4ebd6b9d" returntype="Interval4D" outname="v4">cellnoise_prediction(v)</function></language></functions>
					</node></nodes>
			<connections><connection>
						<in nodeid="3" connector="1"></in>
						<out nodeid="17" connector="0"></out>
					</connection><connection>
						<in nodeid="15" connector="1"></in>
						<out nodeid="1" connector="3"></out>
					</connection><connection>
						<in nodeid="5" connector="0"></in>
						<out nodeid="2" connector="0"></out>
					</connection><connection>
						<in nodeid="20" connector="0"></in>
						<out nodeid="15" connector="0"></out>
					</connection><connection>
						<in nodeid="3" connector="0"></in>
						<out nodeid="15" connector="0"></out>
					</connection><connection>
						<in nodeid="6" connector="1"></in>
						<out nodeid="5" connector="0"></out>
					</connection><connection>
						<in nodeid="15" connector="0"></in>
						<out nodeid="16" connector="0"></out>
					</connection><connection>
						<in nodeid="17" connector="1"></in>
						<out nodeid="20" connector="0"></out>
					</connection><connection>
						<in nodeid="2" connector="0"></in>
						<out nodeid="1" connector="0"></out>
					</connection><connection>
						<in nodeid="17" connector="0"></in>
						<out nodeid="14" connector="0"></out>
					</connection><connection>
						<in nodeid="17" connector="2"></in>
						<out nodeid="18" connector="0"></out>
					</connection><connection>
						<in nodeid="16" connector="0"></in>
						<out nodeid="6" connector="0"></out>
					</connection><connection>
						<in nodeid="6" connector="0"></in>
						<out nodeid="9" connector="0"></out>
					</connection><connection>
						<in nodeid="20" connector="1"></in>
						<out nodeid="21" connector="0"></out>
					</connection></connections>
		</document>