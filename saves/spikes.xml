<?xml version='1.0' encoding='UTF-8'?>
<document>
			<module name="GameEngine"></module>
			<nodes><node type="predefined" title="Stone" id="18">
						<location x="613" y="511"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matstone_uid4e7cbb39" returntype="Material" outname="m">Material(0x8e8e8e);</function></language><language name="glsl"><function name="matstone_uid4e7cbb39" returntype="vec4" outname="m">return vec4(0.56, 0.56, 0.56, 0.0);</function></language></functions>
					</node><node type="predefined" title="3D Perlin Noise" id="13">
						<location x="-157" y="-189"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument><argument name="x" datatype="Double"></argument><argument name="y" datatype="Double"></argument><argument name="z" datatype="Double"></argument><argument name="add" datatype="Double"></argument><argument name="sub" datatype="Double"></argument></language><language name="glsl"><argument name="v" datatype="vec3"></argument><argument name="x" datatype="float"></argument><argument name="y" datatype="float"></argument><argument name="z" datatype="float"></argument><argument name="add" datatype="float"></argument><argument name="sub" datatype="float"></argument></language><language name="prediction"><argument name="v" datatype="Volume"></argument><argument name="x" datatype="Interval"></argument><argument name="y" datatype="Interval"></argument><argument name="z" datatype="Interval"></argument><argument name="add" datatype="Interval"></argument><argument name="sub" datatype="Interval"></argument></language></arguments>

						<sliders>
							<slider name="size" formula="pow(256, 1-s*2)" value="100"></slider><slider name="scale" formula="pow(256, s*2-1)" value="47"></slider><slider name="offset" formula="s*2-1" value="50"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="perlinnoise3_uid4e7cbb39" returntype="Double" outname="o">(noise3((v + Vec3(x,y,z))*size)+offset)*scale/size + add - sub</function></language><language name="glsl"><function name="perlinnoise3_uid4e7cbb39" returntype="float" outname="o">return (noise3((v + vec3(x,y,z))*size)+offset)*scale/size + add - sub;</function></language><language name="prediction"><function name="perlinnoise3_uid4e7cbb39" returntype="Interval" outname="o">(noise3_prediction((v + Volume(x,y,z))*size)+offset)*scale/size + add - sub</function></language></functions>
					</node><node type="predefined" title="World coordinates" id="2">
						<location x="-499" y="64"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="scale" formula="pow(256, 1-s*2)" value="50"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="scalesrcv_uid4e7cbb39" returntype="Vec3" outname="v">world   * scale</function><function name="scalesrcx_uid4e7cbb39" returntype="Double" outname="x">world.x * scale</function><function name="scalesrcy_uid4e7cbb39" returntype="Double" outname="y">world.y * scale</function><function name="scalesrcz_uid4e7cbb39" returntype="Double" outname="z">world.z * scale</function></language><language name="glsl"><function name="scalesrcv_uid4e7cbb39" returntype="vec3" outname="v">return world.xyz * scale;</function><function name="scalesrcx_uid4e7cbb39" returntype="float" outname="x">return world.x * scale;</function><function name="scalesrcy_uid4e7cbb39" returntype="float" outname="y">return world.y * scale;</function><function name="scalesrcz_uid4e7cbb39" returntype="float" outname="z">return world.z * scale;</function></language><language name="prediction"><function name="scalesrcv_uid4e7cbb39" returntype="Volume" outname="v">world   * scale</function><function name="scalesrcx_uid4e7cbb39" returntype="Interval" outname="x">world.x * scale</function><function name="scalesrcy_uid4e7cbb39" returntype="Interval" outname="y">world.y * scale</function><function name="scalesrcz_uid4e7cbb39" returntype="Interval" outname="z">world.z * scale</function></language></functions>
					</node><node type="predefined" title="Negate" id="11">
						<location x="-377" y="572"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="negate_uid4e7cbb39" returntype="Double" outname="o">-a</function></language><language name="glsl"><function name="negate_uid4e7cbb39" returntype="float" outname="o">return -a;</function></language><language name="prediction"><function name="negate_uid4e7cbb39" returntype="Interval" outname="o">-a</function></language></functions>
					</node><node type="predefined" title="Mix Materials" id="15">
						<location x="796" y="521"></location>
						
						<arguments><language name="scala"><argument name="m1" datatype="Material"></argument><argument name="t" datatype="Double"></argument><argument name="m2" datatype="Material"></argument></language><language name="glsl"><argument name="m1" datatype="vec4"></argument><argument name="t" datatype="float"></argument><argument name="m2" datatype="vec4"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matthreshold_uid4e7cbb39" returntype="Material" outname="m">if(t &gt;= 0) m1 else m2;</function></language><language name="glsl"><function name="matthreshold_uid4e7cbb39" returntype="vec4" outname="m">return t &gt;= 0 ? m1 : m2;</function></language></functions>
					</node><node type="preview" title="Preview" id="20">
						<location x="716" y="713"></location>
						<size width="362" height="343"></size><image offsety="-236.53329804675806" offsetx="-797.8837829245748" zoom="2.8102436848064323"></image><view mode="iso" perspective="sideview_zup"></view><depthslider value="50.0"></depthslider><grid selected="false"></grid><continous selected="false"></continous>
						<arguments><language name="scala"><argument name="d" datatype="Double"></argument><argument name="m" datatype="Material"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="result_uid4e7cbb39" returntype="(Double, Material)" outname="result">(d,m)</function></language></functions>
					</node><node type="predefined" title="Max 2" id="5">
						<location x="353" y="255"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="max2_uid4e7cbb39" returntype="Double" outname="o">max(a,b)</function></language><language name="glsl"><function name="max2_uid4e7cbb39" returntype="float" outname="o">return max(a,b);</function></language><language name="prediction"><function name="max2_uid4e7cbb39" returntype="Interval" outname="o">interval.max(a,b)</function></language></functions>
					</node><node type="predefined" title="Mix Materials" id="9">
						<location x="739" y="222"></location>
						
						<arguments><language name="scala"><argument name="m1" datatype="Material"></argument><argument name="t" datatype="Double"></argument><argument name="m2" datatype="Material"></argument></language><language name="glsl"><argument name="m1" datatype="vec4"></argument><argument name="t" datatype="float"></argument><argument name="m2" datatype="vec4"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matthreshold_uid4e7cbb39" returntype="Material" outname="m">if(t &gt;= 0) m1 else m2;</function></language><language name="glsl"><function name="matthreshold_uid4e7cbb39" returntype="vec4" outname="m">return t &gt;= 0 ? m1 : m2;</function></language></functions>
					</node><node type="predefined" title="Diff 2" id="1">
						<location x="500" y="72"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2_uid4e7cbb39" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2_uid4e7cbb39" returntype="float" outname="o">return a-b;</function></language><language name="prediction"><function name="diff2_uid4e7cbb39" returntype="Interval" outname="o">a-b</function></language></functions>
					</node><node type="predefined" title="Constant Exp" id="10">
						<location x="-26" y="763"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256, s*2-1)" value="56"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="constantexp_uid4e7cbb39" returntype="Double" outname="o">value</function></language><language name="glsl"><function name="constantexp_uid4e7cbb39" returntype="float" outname="o">return value;</function></language><language name="prediction"><function name="constantexp_uid4e7cbb39" returntype="Interval" outname="o">Interval(value)</function></language></functions>
					</node><node type="predefined" title="Constant Exp" id="14">
						<location x="-620" y="597"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256, s*2-1)" value="27"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="constantexp_uid4e7cbb39" returntype="Double" outname="o">value</function></language><language name="glsl"><function name="constantexp_uid4e7cbb39" returntype="float" outname="o">return value;</function></language><language name="prediction"><function name="constantexp_uid4e7cbb39" returntype="Interval" outname="o">Interval(value)</function></language></functions>
					</node><node type="predefined" title="Product 2" id="4">
						<location x="-465" y="434"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="product2_uid4e7cbb39" returntype="Double" outname="o">a*b</function></language><language name="glsl"><function name="product2_uid4e7cbb39" returntype="float" outname="o">return a*b;</function></language><language name="prediction"><function name="product2_uid4e7cbb39" returntype="Interval" outname="o">a*b</function></language></functions>
					</node><node type="predefined" title="Constant Exp" id="16">
						<location x="-668" y="751"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256, s*2-1)" value="86"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="constantexp_uid4e7cbb39" returntype="Double" outname="o">value</function></language><language name="glsl"><function name="constantexp_uid4e7cbb39" returntype="float" outname="o">return value;</function></language><language name="prediction"><function name="constantexp_uid4e7cbb39" returntype="Interval" outname="o">Interval(value)</function></language></functions>
					</node><node type="preview" title="Preview" id="17">
						<location x="999" y="-42"></location>
						<size width="746" height="726"></size><image offsety="-11.492793993391153" offsetx="-2669.131886855227" zoom="0.07513148009015777"></image><view mode="iso" perspective="sideview_zup"></view><depthslider value="0.0"></depthslider><grid selected="true"></grid><continous selected="false"></continous>
						<arguments><language name="scala"><argument name="d" datatype="Double"></argument><argument name="m" datatype="Material"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="result_uid4e7cbb39" returntype="(Double, Material)" outname="result">(d,m)</function></language></functions>
					</node><node type="predefined" title="brown" id="6">
						<location x="547" y="204"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							<slider name="r" formula="s" value="44"></slider><slider name="g" formula="s" value="27"></slider><slider name="b" formula="s" value="12"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="matrgb_uid4e7cbb39" returntype="Material" outname="m">Material((r*255).toInt &lt;&lt; 16 | (g*255).toInt &lt;&lt; 8 | (b*255).toInt);</function></language><language name="glsl"><function name="matrgb_uid4e7cbb39" returntype="vec4" outname="m">return vec4(r, g, b, 0.0);</function></language></functions>
					</node><node type="predefined" title="grass height" id="19">
						<location x="113" y="106"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256, s*2-1)" value="57"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="constantexp_uid4e7cbb39" returntype="Double" outname="o">value</function></language><language name="glsl"><function name="constantexp_uid4e7cbb39" returntype="float" outname="o">return value;</function></language><language name="prediction"><function name="constantexp_uid4e7cbb39" returntype="Interval" outname="o">Interval(value)</function></language></functions>
					</node><node type="predefined" title="green" id="12">
						<location x="551" y="342"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							<slider name="r" formula="s" value="44"></slider><slider name="g" formula="s" value="63"></slider><slider name="b" formula="s" value="14"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="matrgb_uid4e7cbb39" returntype="Material" outname="m">Material((r*255).toInt &lt;&lt; 16 | (g*255).toInt &lt;&lt; 8 | (b*255).toInt);</function></language><language name="glsl"><function name="matrgb_uid4e7cbb39" returntype="vec4" outname="m">return vec4(r, g, b, 0.0);</function></language></functions>
					</node><node type="predefined" title="spikes" id="7">
						<location x="-64" y="522"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument><argument name="x" datatype="Double"></argument><argument name="y" datatype="Double"></argument><argument name="z" datatype="Double"></argument><argument name="add" datatype="Double"></argument><argument name="sub" datatype="Double"></argument></language><language name="glsl"><argument name="v" datatype="vec3"></argument><argument name="x" datatype="float"></argument><argument name="y" datatype="float"></argument><argument name="z" datatype="float"></argument><argument name="add" datatype="float"></argument><argument name="sub" datatype="float"></argument></language><language name="prediction"><argument name="v" datatype="Volume"></argument><argument name="x" datatype="Interval"></argument><argument name="y" datatype="Interval"></argument><argument name="z" datatype="Interval"></argument><argument name="add" datatype="Interval"></argument><argument name="sub" datatype="Interval"></argument></language></arguments>

						<sliders>
							<slider name="size" formula="pow(256, 1-s*2)" value="72"></slider><slider name="scale" formula="pow(256, s*2-1)" value="73"></slider><slider name="offset" formula="s*2-1" value="50"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="perlinnoise3_uid4e7cbb39" returntype="Double" outname="o">(noise3((v + Vec3(x,y,z))*size)+offset)*scale/size + add - sub</function></language><language name="glsl"><function name="perlinnoise3_uid4e7cbb39" returntype="float" outname="o">return (noise3((v + vec3(x,y,z))*size)+offset)*scale/size + add - sub;</function></language><language name="prediction"><function name="perlinnoise3_uid4e7cbb39" returntype="Interval" outname="o">(noise3_prediction((v + Volume(x,y,z))*size)+offset)*scale/size + add - sub</function></language></functions>
					</node><node type="predefined" title="hills (diff 2)" id="3">
						<location x="130" y="-44"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2_uid4e7cbb39" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2_uid4e7cbb39" returntype="float" outname="o">return a-b;</function></language><language name="prediction"><function name="diff2_uid4e7cbb39" returntype="Interval" outname="o">a-b</function></language></functions>
					</node><node type="predefined" title="Sum 3" id="21">
						<location x="-217" y="574"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument><argument name="c" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument><argument name="c" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument><argument name="c" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="sum3_uid4e7cbb39" returntype="Double" outname="o">a+b+c</function></language><language name="glsl"><function name="sum3_uid4e7cbb39" returntype="float" outname="o">return a+b+c;</function></language><language name="prediction"><function name="sum3_uid4e7cbb39" returntype="Interval" outname="o">a+b+c</function></language></functions>
					</node><node type="predefined" title="Sum 2" id="8">
						<location x="254" y="767"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="sum2_uid4e7cbb39" returntype="Double" outname="o">a+b</function></language><language name="glsl"><function name="sum2_uid4e7cbb39" returntype="float" outname="o">return a+b;</function></language><language name="prediction"><function name="sum2_uid4e7cbb39" returntype="Interval" outname="o">a+b</function></language></functions>
					</node></nodes>
			<connections><connection>
						<in nodeid="4" connector="0"></in>
						<out nodeid="2" connector="3"></out>
					</connection><connection>
						<in nodeid="3" connector="1"></in>
						<out nodeid="2" connector="3"></out>
					</connection><connection>
						<in nodeid="1" connector="0"></in>
						<out nodeid="3" connector="0"></out>
					</connection><connection>
						<in nodeid="9" connector="2"></in>
						<out nodeid="12" connector="0"></out>
					</connection><connection>
						<in nodeid="8" connector="0"></in>
						<out nodeid="7" connector="0"></out>
					</connection><connection>
						<in nodeid="7" connector="2"></in>
						<out nodeid="2" connector="2"></out>
					</connection><connection>
						<in nodeid="7" connector="3"></in>
						<out nodeid="4" connector="0"></out>
					</connection><connection>
						<in nodeid="7" connector="1"></in>
						<out nodeid="2" connector="1"></out>
					</connection><connection>
						<in nodeid="13" connector="1"></in>
						<out nodeid="2" connector="1"></out>
					</connection><connection>
						<in nodeid="5" connector="0"></in>
						<out nodeid="3" connector="0"></out>
					</connection><connection>
						<in nodeid="9" connector="0"></in>
						<out nodeid="6" connector="0"></out>
					</connection><connection>
						<in nodeid="3" connector="0"></in>
						<out nodeid="13" connector="0"></out>
					</connection><connection>
						<in nodeid="21" connector="2"></in>
						<out nodeid="11" connector="0"></out>
					</connection><connection>
						<in nodeid="21" connector="1"></in>
						<out nodeid="16" connector="0"></out>
					</connection><connection>
						<in nodeid="17" connector="1"></in>
						<out nodeid="15" connector="0"></out>
					</connection><connection>
						<in nodeid="17" connector="0"></in>
						<out nodeid="5" connector="0"></out>
					</connection><connection>
						<in nodeid="21" connector="0"></in>
						<out nodeid="2" connector="3"></out>
					</connection><connection>
						<in nodeid="15" connector="2"></in>
						<out nodeid="9" connector="0"></out>
					</connection><connection>
						<in nodeid="15" connector="1"></in>
						<out nodeid="8" connector="0"></out>
					</connection><connection>
						<in nodeid="8" connector="1"></in>
						<out nodeid="10" connector="0"></out>
					</connection><connection>
						<in nodeid="13" connector="2"></in>
						<out nodeid="2" connector="2"></out>
					</connection><connection>
						<in nodeid="11" connector="0"></in>
						<out nodeid="13" connector="0"></out>
					</connection><connection>
						<in nodeid="9" connector="1"></in>
						<out nodeid="1" connector="0"></out>
					</connection><connection>
						<in nodeid="1" connector="1"></in>
						<out nodeid="19" connector="0"></out>
					</connection><connection>
						<in nodeid="20" connector="0"></in>
						<out nodeid="7" connector="0"></out>
					</connection><connection>
						<in nodeid="7" connector="5"></in>
						<out nodeid="21" connector="0"></out>
					</connection><connection>
						<in nodeid="4" connector="1"></in>
						<out nodeid="14" connector="0"></out>
					</connection><connection>
						<in nodeid="15" connector="0"></in>
						<out nodeid="18" connector="0"></out>
					</connection><connection>
						<in nodeid="5" connector="1"></in>
						<out nodeid="7" connector="0"></out>
					</connection></connections>
		</document>