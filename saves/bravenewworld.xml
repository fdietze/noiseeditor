<?xml version='1.0' encoding='UTF-8'?>
<document>
			<module name="GameEngine"></module>
			<nodes><node type="predefined" title="RGB" id="15">
						<location x="729" y="316"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							<slider name="r" formula="s" value="44"></slider><slider name="g" formula="s" value="27"></slider><slider name="b" formula="s" value="12"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="matrgb" returntype="Material" outname="m">Material((r*255).toInt &lt;&lt; 16 | (g*255).toInt &lt;&lt; 8 | (b*255).toInt);</function></language><language name="glsl"><function name="matrgb" returntype="vec4" outname="m">return vec4(r, g, b, 0.0);</function></language></functions>
					</node><node type="predefined" title="Mix Materials" id="32">
						<location x="964" y="567"></location>
						
						<arguments><language name="scala"><argument name="m1" datatype="Material"></argument><argument name="t" datatype="Double"></argument><argument name="m2" datatype="Material"></argument></language><language name="glsl"><argument name="m1" datatype="vec4"></argument><argument name="t" datatype="float"></argument><argument name="m2" datatype="vec4"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matthreshold" returntype="Material" outname="m">if(t &gt;= 0) m1 else m2;</function></language><language name="glsl"><function name="matthreshold" returntype="vec4" outname="m">return t &gt;= 0 ? m1 : m2;</function></language></functions>
					</node><node type="predefined" title="Constant Exp" id="25">
						<location x="-102" y="765"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256,((s-0.5)*2))" value="27"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="constantexp" returntype="Double" outname="o">value</function></language><language name="glsl"><function name="constantexp" returntype="float" outname="o">return value;</function></language></functions>
					</node><node type="predefined" title="Mix Materials" id="3">
						<location x="908" y="365"></location>
						
						<arguments><language name="scala"><argument name="m1" datatype="Material"></argument><argument name="t" datatype="Double"></argument><argument name="m2" datatype="Material"></argument></language><language name="glsl"><argument name="m1" datatype="vec4"></argument><argument name="t" datatype="float"></argument><argument name="m2" datatype="vec4"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matthreshold" returntype="Material" outname="m">if(t &gt;= 0) m1 else m2;</function></language><language name="glsl"><function name="matthreshold" returntype="vec4" outname="m">return t &gt;= 0 ? m1 : m2;</function></language></functions>
					</node><node type="predefined" title="Sum2" id="27">
						<location x="190" y="730"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="sum2" returntype="Double" outname="o">a+b</function></language><language name="glsl"><function name="sum2" returntype="float" outname="o">return a+b;</function></language></functions>
					</node><node type="predefined" title="World coordinates" id="12">
						<location x="-220" y="135"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							<slider name="scale" formula="pow(256,((0.5-s)*2))" value="48"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="scalesrcv" returntype="Vec3" outname="v">world   * scale</function><function name="scalesrcx" returntype="Double" outname="x">world.x * scale</function><function name="scalesrcy" returntype="Double" outname="y">world.y * scale</function><function name="scalesrcz" returntype="Double" outname="z">world.z * scale</function></language><language name="glsl"><function name="scalesrcv" returntype="vec3" outname="v">return world.xyz * scale;</function><function name="scalesrcx" returntype="float" outname="x">return world.x * scale;</function><function name="scalesrcy" returntype="float" outname="y">return world.y * scale;</function><function name="scalesrcz" returntype="float" outname="z">return world.z * scale;</function></language></functions>
					</node><node type="predefined" title="3D Perlin Noise" id="21">
						<location x="357" y="655"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument><argument name="x" datatype="Double"></argument><argument name="y" datatype="Double"></argument><argument name="z" datatype="Double"></argument><argument name="add" datatype="Double"></argument><argument name="sub" datatype="Double"></argument></language><language name="glsl"><argument name="v" datatype="vec3"></argument><argument name="x" datatype="float"></argument><argument name="y" datatype="float"></argument><argument name="z" datatype="float"></argument><argument name="add" datatype="float"></argument><argument name="sub" datatype="float"></argument></language></arguments>

						<sliders>
							<slider name="size" formula="pow(256,((0.5-s)*2))" value="72"></slider><slider name="scale" formula="pow(256,((s-0.5)*2))" value="73"></slider><slider name="offset" formula="(s-0.5)*2" value="44"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="summedinputnoise3" returntype="Double" outname="o">(noise3((v + Vec3(x,y,z))*size)+offset)*scale/size + add - sub</function></language><language name="glsl"><function name="summedinputnoise3" returntype="float" outname="o">return (noise3((v + vec3(x,y,z))*size)+offset)*scale/size + add - sub;</function></language></functions>
					</node><node type="preview" title="Preview" id="19">
						<location x="885" y="856"></location>
						<size width="362" height="343"></size><image offsety="-236.53329804675806" offsetx="-797.8837829245748" zoom="2.8102436848064323"></image><view mode="iso" perspective="sideview_zup"></view><depthslider value="50.0"></depthslider>
						<arguments><language name="scala"><argument name="d" datatype="Double"></argument><argument name="m" datatype="Material"></argument></language><language name="glsl"><argument name="d" datatype="float"></argument><argument name="m" datatype="vec4"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="result" returntype="(Double, Material)" outname="result">(d,m)</function></language><language name="glsl"><function name="result" returntype="vec4" outname="result">return m;</function></language></functions>
					</node><node type="preview" title="Preview" id="16">
						<location x="1080" y="95"></location>
						<size width="746" height="726"></size><image offsety="-450.15334929942617" offsetx="-3210.8851729513253" zoom="1.586309297171495"></image><view mode="isodepth" perspective="sideview_zup"></view><depthslider value="44.41609211028764"></depthslider>
						<arguments><language name="scala"><argument name="d" datatype="Double"></argument><argument name="m" datatype="Material"></argument></language><language name="glsl"><argument name="d" datatype="float"></argument><argument name="m" datatype="vec4"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="result" returntype="(Double, Material)" outname="result">(d,m)</function></language><language name="glsl"><function name="result" returntype="vec4" outname="result">return m;</function></language></functions>
					</node><node type="predefined" title="Diff2" id="13">
						<location x="768" y="64"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2" returntype="float" outname="o">return a-b;</function></language></functions>
					</node><node type="predefined" title="3D Perlin Noise" id="8">
						<location x="380" y="-118"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument><argument name="x" datatype="Double"></argument><argument name="y" datatype="Double"></argument><argument name="z" datatype="Double"></argument><argument name="add" datatype="Double"></argument><argument name="sub" datatype="Double"></argument></language><language name="glsl"><argument name="v" datatype="vec3"></argument><argument name="x" datatype="float"></argument><argument name="y" datatype="float"></argument><argument name="z" datatype="float"></argument><argument name="add" datatype="float"></argument><argument name="sub" datatype="float"></argument></language></arguments>

						<sliders>
							<slider name="size" formula="pow(256,((0.5-s)*2))" value="100"></slider><slider name="scale" formula="pow(256,((s-0.5)*2))" value="47"></slider><slider name="offset" formula="(s-0.5)*2" value="50"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="summedinputnoise3" returntype="Double" outname="o">(noise3((v + Vec3(x,y,z))*size)+offset)*scale/size + add - sub</function></language><language name="glsl"><function name="summedinputnoise3" returntype="float" outname="o">return (noise3((v + vec3(x,y,z))*size)+offset)*scale/size + add - sub;</function></language></functions>
					</node><node type="predefined" title="Max2" id="26">
						<location x="579" y="446"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="max2" returntype="Double" outname="o">max(a,b)</function></language><language name="glsl"><function name="max2" returntype="float" outname="o">return max(a,b);</function></language></functions>
					</node><node type="predefined" title="Constant Exp" id="28">
						<location x="8" y="865"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256,((s-0.5)*2))" value="86"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="constantexp" returntype="Double" outname="o">value</function></language><language name="glsl"><function name="constantexp" returntype="float" outname="o">return value;</function></language></functions>
					</node><node type="predefined" title="Diff2" id="14">
						<location x="866" y="217"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2" returntype="float" outname="o">return a-b;</function></language></functions>
					</node><node type="predefined" title="RGB" id="9">
						<location x="731" y="439"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							<slider name="r" formula="s" value="44"></slider><slider name="g" formula="s" value="63"></slider><slider name="b" formula="s" value="14"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="matrgb" returntype="Material" outname="m">Material((r*255).toInt &lt;&lt; 16 | (g*255).toInt &lt;&lt; 8 | (b*255).toInt);</function></language><language name="glsl"><function name="matrgb" returntype="vec4" outname="m">return vec4(r, g, b, 0.0);</function></language></functions>
					</node><node type="predefined" title="Sum3" id="29">
						<location x="293" y="809"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument><argument name="c" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument><argument name="c" datatype="float"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="sum3" returntype="Double" outname="o">a+b+c</function></language><language name="glsl"><function name="sum3" returntype="float" outname="o">return a+b+c;</function></language></functions>
					</node><node type="predefined" title="Constant Exp" id="11">
						<location x="571" y="207"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256,((s-0.5)*2))" value="49"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="constantexp" returntype="Double" outname="o">value</function></language><language name="glsl"><function name="constantexp" returntype="float" outname="o">return value;</function></language></functions>
					</node><node type="predefined" title="Product2" id="24">
						<location x="93" y="638"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="product2" returntype="Double" outname="o">a*b</function></language><language name="glsl"><function name="product2" returntype="float" outname="o">return a*b;</function></language></functions>
					</node><node type="predefined" title="Sum2" id="33">
						<location x="673" y="756"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="sum2" returntype="Double" outname="o">a+b</function></language><language name="glsl"><function name="sum2" returntype="float" outname="o">return a+b;</function></language></functions>
					</node><node type="predefined" title="Stone" id="31">
						<location x="624" y="616"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matstone" returntype="Material" outname="m">Material(0x8e8e8e);</function></language><language name="glsl"><function name="matstone" returntype="vec4" outname="m">return vec4(0.56, 0.56, 0.56, 0.0);</function></language></functions>
					</node><node type="predefined" title="Constant Exp" id="34">
						<location x="487" y="895"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256,((s-0.5)*2))" value="56"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="constantexp" returntype="Double" outname="o">value</function></language><language name="glsl"><function name="constantexp" returntype="float" outname="o">return value;</function></language></functions>
					</node><node type="predefined" title="Diff2" id="30">
						<location x="229" y="899"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2" returntype="float" outname="o">return a-b;</function></language></functions>
					</node></nodes>
			<connections><connection>
						<in nodeid="27" connector="1"></in>
						<out nodeid="28" connector="0"></out>
					</connection><connection>
						<in nodeid="29" connector="0"></in>
						<out nodeid="12" connector="3"></out>
					</connection><connection>
						<in nodeid="21" connector="5"></in>
						<out nodeid="29" connector="0"></out>
					</connection><connection>
						<in nodeid="16" connector="1"></in>
						<out nodeid="32" connector="0"></out>
					</connection><connection>
						<in nodeid="33" connector="0"></in>
						<out nodeid="21" connector="0"></out>
					</connection><connection>
						<in nodeid="26" connector="1"></in>
						<out nodeid="21" connector="0"></out>
					</connection><connection>
						<in nodeid="24" connector="0"></in>
						<out nodeid="12" connector="3"></out>
					</connection><connection>
						<in nodeid="32" connector="2"></in>
						<out nodeid="3" connector="0"></out>
					</connection><connection>
						<in nodeid="21" connector="2"></in>
						<out nodeid="12" connector="2"></out>
					</connection><connection>
						<in nodeid="3" connector="0"></in>
						<out nodeid="15" connector="0"></out>
					</connection><connection>
						<in nodeid="13" connector="1"></in>
						<out nodeid="12" connector="3"></out>
					</connection><connection>
						<in nodeid="24" connector="1"></in>
						<out nodeid="25" connector="0"></out>
					</connection><connection>
						<in nodeid="3" connector="1"></in>
						<out nodeid="14" connector="0"></out>
					</connection><connection>
						<in nodeid="27" connector="0"></in>
						<out nodeid="12" connector="3"></out>
					</connection><connection>
						<in nodeid="13" connector="0"></in>
						<out nodeid="8" connector="0"></out>
					</connection><connection>
						<in nodeid="21" connector="1"></in>
						<out nodeid="12" connector="1"></out>
					</connection><connection>
						<in nodeid="19" connector="0"></in>
						<out nodeid="21" connector="0"></out>
					</connection><connection>
						<in nodeid="14" connector="0"></in>
						<out nodeid="13" connector="0"></out>
					</connection><connection>
						<in nodeid="16" connector="0"></in>
						<out nodeid="26" connector="0"></out>
					</connection><connection>
						<in nodeid="3" connector="2"></in>
						<out nodeid="9" connector="0"></out>
					</connection><connection>
						<in nodeid="8" connector="2"></in>
						<out nodeid="12" connector="2"></out>
					</connection><connection>
						<in nodeid="14" connector="1"></in>
						<out nodeid="11" connector="0"></out>
					</connection><connection>
						<in nodeid="8" connector="1"></in>
						<out nodeid="12" connector="1"></out>
					</connection><connection>
						<in nodeid="32" connector="0"></in>
						<out nodeid="31" connector="0"></out>
					</connection><connection>
						<in nodeid="30" connector="1"></in>
						<out nodeid="8" connector="0"></out>
					</connection><connection>
						<in nodeid="32" connector="1"></in>
						<out nodeid="33" connector="0"></out>
					</connection><connection>
						<in nodeid="21" connector="3"></in>
						<out nodeid="24" connector="0"></out>
					</connection><connection>
						<in nodeid="26" connector="0"></in>
						<out nodeid="13" connector="0"></out>
					</connection><connection>
						<in nodeid="29" connector="1"></in>
						<out nodeid="28" connector="0"></out>
					</connection><connection>
						<in nodeid="33" connector="1"></in>
						<out nodeid="34" connector="0"></out>
					</connection><connection>
						<in nodeid="29" connector="2"></in>
						<out nodeid="30" connector="0"></out>
					</connection></connections>
		</document>