<?xml version='1.0' encoding='UTF-8'?>
<document>
			<module name="GameEngine"></module>
			<nodes><node type="predefined" title="Multiply Exp Constant" id="13">
						<location x="155" y="487"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256,((s-0.5)*2))" value="38"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="multiplyconstantexp" returntype="Double" outname="o">a*value</function></language><language name="glsl"><function name="multiplyconstantexp" returntype="float" outname="o">return a*value;</function></language></functions>
					</node><node type="predefined" title="Sphere" id="10">
						<location x="554" y="358"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument></language><language name="glsl"><argument name="v" datatype="vec3"></argument></language></arguments>

						<sliders>
							<slider name="radius" formula="pow(256,((s-0.5)*2))" value="64"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="sphere" returntype="Double" outname="o">radius-sqrt(dot(v,v))</function></language><language name="glsl"><function name="sphere" returntype="float" outname="o">return radius-sqrt(dot(v,v));</function></language></functions>
					</node><node type="predefined" title="Add Exp Constant" id="14">
						<location x="253" y="314"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256,((s-0.5)*2))" value="64"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="addconstantexp" returntype="Double" outname="o">a+value</function></language><language name="glsl"><function name="addconstantexp" returntype="float" outname="o">return a+value;</function></language></functions>
					</node><node type="predefined" title="Sphere" id="5">
						<location x="646" y="190"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument></language><language name="glsl"><argument name="v" datatype="vec3"></argument></language></arguments>

						<sliders>
							<slider name="radius" formula="pow(256,((s-0.5)*2))" value="66"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="sphere" returntype="Double" outname="o">radius-sqrt(dot(v,v))</function></language><language name="glsl"><function name="sphere" returntype="float" outname="o">return radius-sqrt(dot(v,v));</function></language></functions>
					</node><node type="predefined" title="Max2" id="11">
						<location x="958" y="192"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="max2" returntype="Double" outname="o">max(a,b)</function></language><language name="glsl"><function name="max2" returntype="float" outname="o">return max(a,b);</function></language><language name="prediction"><function name="max2" returntype="Interval" outname="o">intervalmax(a,b)</function></language></functions>
					</node><node type="predefined" title="Add Exp Constant" id="15">
						<location x="358" y="496"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256,((s-0.5)*2))" value="60"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="addconstantexp" returntype="Double" outname="o">a+value</function></language><language name="glsl"><function name="addconstantexp" returntype="float" outname="o">return a+value;</function></language></functions>
					</node><node type="predefined" title="Stone" id="9">
						<location x="918" y="295"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matstone" returntype="Material" outname="m">Material(0x8e8e8e);</function></language><language name="glsl"><function name="matstone" returntype="vec4" outname="m">return vec4(0.56, 0.56, 0.56, 0.0);</function></language></functions>
					</node><node type="predefined" title="Vec3" id="6">
						<location x="536" y="226"></location>
						
						<arguments><language name="scala"><argument name="x" datatype="Double"></argument><argument name="y" datatype="Double"></argument><argument name="z" datatype="Double"></argument></language><language name="glsl"><argument name="x" datatype="float"></argument><argument name="y" datatype="float"></argument><argument name="z" datatype="float"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="createvec3" returntype="Vec3" outname="v">Vec3(x,y,z)</function></language><language name="glsl"><function name="createvec3" returntype="vec3" outname="v">return vec3(x,y,z);</function></language></functions>
					</node><node type="predefined" title="World coordinates" id="3">
						<location x="2" y="165"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							<slider name="scale" formula="pow(256,((0.5-s)*2))" value="50"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="scalesrcv" returntype="Vec3" outname="v">world   * scale</function><function name="scalesrcx" returntype="Double" outname="x">world.x * scale</function><function name="scalesrcy" returntype="Double" outname="y">world.y * scale</function><function name="scalesrcz" returntype="Double" outname="z">world.z * scale</function></language><language name="glsl"><function name="scalesrcv" returntype="vec3" outname="v">return world.xyz * scale;</function><function name="scalesrcx" returntype="float" outname="x">return world.x * scale;</function><function name="scalesrcy" returntype="float" outname="y">return world.y * scale;</function><function name="scalesrcz" returntype="float" outname="z">return world.z * scale;</function></language></functions>
					</node><node type="predefined" title="Add Exp Constant" id="7">
						<location x="346" y="155"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256,((s-0.5)*2))" value="70"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="addconstantexp" returntype="Double" outname="o">a+value</function></language><language name="glsl"><function name="addconstantexp" returntype="float" outname="o">return a+value;</function></language></functions>
					</node><node type="predefined" title="Sphere" id="1">
						<location x="625" y="78"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument></language><language name="glsl"><argument name="v" datatype="vec3"></argument></language></arguments>

						<sliders>
							<slider name="radius" formula="pow(256,((s-0.5)*2))" value="66"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="sphere" returntype="Double" outname="o">radius-sqrt(dot(v,v))</function></language><language name="glsl"><function name="sphere" returntype="float" outname="o">return radius-sqrt(dot(v,v));</function></language></functions>
					</node><node type="preview" title="Preview" id="2">
						<location x="1038" y="92"></location>
						<size width="416" height="474"></size><image offsety="-40.57063250000002" offsetx="-34.66491400000002" zoom="0.16105100000000006"></image><view mode="isodepth" perspective="topview_zup"></view><depthslider value="50.0"></depthslider>
						<arguments><language name="scala"><argument name="d" datatype="Double"></argument><argument name="m" datatype="Material"></argument></language><language name="glsl"><argument name="d" datatype="float"></argument><argument name="m" datatype="vec4"></argument></language><language name="prediction"><argument name="d" datatype="Interval"></argument><argument name="m" datatype="Material"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="result" returntype="(Double, Material)" outname="result">(d,m)</function></language><language name="glsl"><function name="result" returntype="vec4" outname="result">return m;</function></language><language name="prediction"><function name="result" returntype="Interval" outname="result">return d;</function></language></functions>
					</node><node type="predefined" title="Max2" id="8">
						<location x="884" y="143"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="max2" returntype="Double" outname="o">max(a,b)</function></language><language name="glsl"><function name="max2" returntype="float" outname="o">return max(a,b);</function></language><language name="prediction"><function name="max2" returntype="Interval" outname="o">intervalmax(a,b)</function></language></functions>
					</node><node type="predefined" title="Vec3" id="12">
						<location x="464" y="335"></location>
						
						<arguments><language name="scala"><argument name="x" datatype="Double"></argument><argument name="y" datatype="Double"></argument><argument name="z" datatype="Double"></argument></language><language name="glsl"><argument name="x" datatype="float"></argument><argument name="y" datatype="float"></argument><argument name="z" datatype="float"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="createvec3" returntype="Vec3" outname="v">Vec3(x,y,z)</function></language><language name="glsl"><function name="createvec3" returntype="vec3" outname="v">return vec3(x,y,z);</function></language></functions>
					</node></nodes>
			<connections><connection>
						<in nodeid="12" connector="2"></in>
						<out nodeid="3" connector="3"></out>
					</connection><connection>
						<in nodeid="6" connector="0"></in>
						<out nodeid="7" connector="0"></out>
					</connection><connection>
						<in nodeid="12" connector="0"></in>
						<out nodeid="14" connector="0"></out>
					</connection><connection>
						<in nodeid="10" connector="0"></in>
						<out nodeid="12" connector="0"></out>
					</connection><connection>
						<in nodeid="11" connector="1"></in>
						<out nodeid="10" connector="0"></out>
					</connection><connection>
						<in nodeid="14" connector="0"></in>
						<out nodeid="3" connector="1"></out>
					</connection><connection>
						<in nodeid="1" connector="0"></in>
						<out nodeid="3" connector="0"></out>
					</connection><connection>
						<in nodeid="2" connector="0"></in>
						<out nodeid="11" connector="0"></out>
					</connection><connection>
						<in nodeid="2" connector="1"></in>
						<out nodeid="9" connector="0"></out>
					</connection><connection>
						<in nodeid="6" connector="1"></in>
						<out nodeid="3" connector="2"></out>
					</connection><connection>
						<in nodeid="12" connector="1"></in>
						<out nodeid="15" connector="0"></out>
					</connection><connection>
						<in nodeid="8" connector="0"></in>
						<out nodeid="1" connector="0"></out>
					</connection><connection>
						<in nodeid="11" connector="0"></in>
						<out nodeid="8" connector="0"></out>
					</connection><connection>
						<in nodeid="5" connector="0"></in>
						<out nodeid="6" connector="0"></out>
					</connection><connection>
						<in nodeid="7" connector="0"></in>
						<out nodeid="3" connector="1"></out>
					</connection><connection>
						<in nodeid="6" connector="2"></in>
						<out nodeid="3" connector="3"></out>
					</connection><connection>
						<in nodeid="13" connector="0"></in>
						<out nodeid="3" connector="2"></out>
					</connection><connection>
						<in nodeid="8" connector="1"></in>
						<out nodeid="5" connector="0"></out>
					</connection><connection>
						<in nodeid="15" connector="0"></in>
						<out nodeid="13" connector="0"></out>
					</connection></connections>
		</document>