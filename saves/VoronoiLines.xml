<?xml version='1.0' encoding='UTF-8'?>
<document>
			<module name="GameEngine"></module>
			<nodes><node type="predefined" title="-a" id="4">
						<location x="118" y="-167"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="negate_uid4ebeaf3c" returntype="Double" outname="o">-a</function></language><language name="glsl"><function name="negate_uid4ebeaf3c" returntype="float" outname="o">return -a;</function></language><language name="prediction"><function name="negate_uid4ebeaf3c" returntype="Interval" outname="o">-a</function></language></functions>
					</node><node type="predefined" title="a * Exp Slider" id="11">
						<location x="-446" y="-198"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256, s*2-1)" value="32"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="multiplyconstantexp_uid4ebeaf3c" returntype="Double" outname="o">a*value</function></language><language name="glsl"><function name="multiplyconstantexp_uid4ebeaf3c" returntype="float" outname="o">return a*value;</function></language><language name="prediction"><function name="multiplyconstantexp_uid4ebeaf3c" returntype="Interval" outname="o">a*value</function></language></functions>
					</node><node type="predefined" title="a * Exp Slider" id="1">
						<location x="-423" y="386"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256, s*2-1)" value="50"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="multiplyconstantexp_uid4ebeaf3c" returntype="Double" outname="o">a*value</function></language><language name="glsl"><function name="multiplyconstantexp_uid4ebeaf3c" returntype="float" outname="o">return a*value;</function></language><language name="prediction"><function name="multiplyconstantexp_uid4ebeaf3c" returntype="Interval" outname="o">a*value</function></language></functions>
					</node><node type="predefined" title="Exponential slider: Scalar" id="17">
						<location x="-107" y="115"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256, s*2-1)" value="20"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="expconstant_uid4ebeaf3c" returntype="Double" outname="o">value</function></language><language name="glsl"><function name="expconstant_uid4ebeaf3c" returntype="float" outname="o">return value;</function></language><language name="prediction"><function name="expconstant_uid4ebeaf3c" returntype="Interval" outname="o">Interval(value)</function></language></functions>
					</node><node type="preview" title="Preview" id="12">
						<location x="282" y="232"></location>
						<size width="481" height="437"></size><image offsety="-462.2297294026685" offsetx="-448.65798214973057" zoom="1.9194342495775096"></image><view mode="iso" perspective="sideview_zup"></view><depthslider value="49.68740789108454"></depthslider><grid selected="false"></grid><continous selected="false"></continous>
						<arguments><language name="scala"><argument name="d" datatype="Double"></argument><argument name="m" datatype="Material"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="result_uid4ebeaf3c" returntype="(Double, Material)" outname="result">(d,m)</function></language></functions>
					</node><node type="predefined" title="a - b" id="16">
						<location x="-9" y="360"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2_uid4ebeaf3c" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2_uid4ebeaf3c" returntype="float" outname="o">return a-b;</function></language><language name="prediction"><function name="diff2_uid4ebeaf3c" returntype="Interval" outname="o">a-b</function></language></functions>
					</node><node type="predefined" title="3D Worley Noise" id="20">
						<location x="-723" y="35"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument></language><language name="prediction"><argument name="v" datatype="Volume"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="worleynoise3_uid4ebeaf3c" returntype="Vec4" outname="v4">cellnoise(v)</function></language><language name="prediction"><function name="worleynoise3_uid4ebeaf3c" returntype="Interval4D" outname="v4">cellnoise_prediction(v)</function></language></functions>
					</node><node type="predefined" title="a - b" id="3">
						<location x="122" y="6"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2_uid4ebeaf3c" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2_uid4ebeaf3c" returntype="float" outname="o">return a-b;</function></language><language name="prediction"><function name="diff2_uid4ebeaf3c" returntype="Interval" outname="o">a-b</function></language></functions>
					</node><node type="predefined" title="a + b" id="5">
						<location x="-75" y="-178"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="sum2_uid4ebeaf3c" returntype="Double" outname="o">a+b</function></language><language name="glsl"><function name="sum2_uid4ebeaf3c" returntype="float" outname="o">return a+b;</function></language><language name="prediction"><function name="sum2_uid4ebeaf3c" returntype="Interval" outname="o">a+b</function></language></functions>
					</node><node type="predefined" title="World coordinates" id="13">
						<location x="-1215" y="27"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="scale" formula="pow(256,((0.5-s)*2))" value="81"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="scalesrcv_uid4ebeaf3c" returntype="Vec3" outname="v">world   * scale</function><function name="scalesrcx_uid4ebeaf3c" returntype="Double" outname="x">world.x * scale</function><function name="scalesrcy_uid4ebeaf3c" returntype="Double" outname="y">world.y * scale</function><function name="scalesrcz_uid4ebeaf3c" returntype="Double" outname="z">world.z * scale</function></language><language name="glsl"><function name="scalesrcv_uid4ebeaf3c" returntype="vec3" outname="v">return world.xyz * scale;</function><function name="scalesrcx_uid4ebeaf3c" returntype="float" outname="x">return world.x * scale;</function><function name="scalesrcy_uid4ebeaf3c" returntype="float" outname="y">return world.y * scale;</function><function name="scalesrcz_uid4ebeaf3c" returntype="float" outname="z">return world.z * scale;</function></language><language name="prediction"><function name="scalesrcv_uid4ebeaf3c" returntype="Volume" outname="v">world   * scale</function><function name="scalesrcx_uid4ebeaf3c" returntype="Interval" outname="x">world.x * scale</function><function name="scalesrcy_uid4ebeaf3c" returntype="Interval" outname="y">world.y * scale</function><function name="scalesrcz_uid4ebeaf3c" returntype="Interval" outname="z">world.z * scale</function></language></functions>
					</node><node type="predefined" title="Vec3(x,y,z)" id="7">
						<location x="-902" y="54"></location>
						
						<arguments><language name="scala"><argument name="x" datatype="Double"></argument><argument name="y" datatype="Double"></argument><argument name="z" datatype="Double"></argument></language><language name="glsl"><argument name="x" datatype="float"></argument><argument name="y" datatype="float"></argument><argument name="z" datatype="float"></argument></language><language name="prediction"><argument name="x" datatype="Interval"></argument><argument name="y" datatype="Interval"></argument><argument name="z" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="createvec3_uid4ebeaf3c" returntype="Vec3" outname="v">Vec3(x,y,z)</function></language><language name="glsl"><function name="createvec3_uid4ebeaf3c" returntype="vec3" outname="v">return vec3(x,y,z);</function></language><language name="prediction"><function name="createvec3_uid4ebeaf3c" returntype="Volume" outname="v">Volume(x,y,z)</function></language></functions>
					</node><node type="predefined" title="a * Exp Slider" id="6">
						<location x="-255" y="244"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256, s*2-1)" value="82"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="multiplyconstantexp_uid4ebeaf3c" returntype="Double" outname="o">a*value</function></language><language name="glsl"><function name="multiplyconstantexp_uid4ebeaf3c" returntype="float" outname="o">return a*value;</function></language><language name="prediction"><function name="multiplyconstantexp_uid4ebeaf3c" returntype="Interval" outname="o">a*value</function></language></functions>
					</node><node type="predefined" title="soil" id="9">
						<location x="111" y="201"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matsoil_uid4ebeaf3c" returntype="Material" outname="m">Material(-6649231,2)</function></language><language name="glsl"><function name="matsoil_uid4ebeaf3c" returntype="vec4" outname="m">return vec4(-0,398438, 0,539063, 0,441406, 0);</function></language></functions>
					</node><node type="predefined" title="a * b * c" id="15">
						<location x="-419" y="183"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument><argument name="c" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument><argument name="c" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument><argument name="c" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="product3_uid4ebeaf3c" returntype="Double" outname="o">a*b*c</function></language><language name="glsl"><function name="product3_uid4ebeaf3c" returntype="float" outname="o">return a*b*c;</function></language><language name="prediction"><function name="product3_uid4ebeaf3c" returntype="Interval" outname="o">a*b*c</function></language></functions>
					</node><node type="predefined" title="Extract Vec4" id="14">
						<location x="-423" y="-31"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec4"></argument></language><language name="prediction"><argument name="v" datatype="Interval4D"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="vec4x_uid4ebeaf3c" returntype="Double" outname="x">v.x</function><function name="vec4y_uid4ebeaf3c" returntype="Double" outname="y">v.y</function><function name="vec4z_uid4ebeaf3c" returntype="Double" outname="z">v.z</function><function name="vec4w_uid4ebeaf3c" returntype="Double" outname="w">v.w</function></language><language name="prediction"><function name="vec4x_uid4ebeaf3c" returntype="Interval" outname="x">v.x</function><function name="vec4y_uid4ebeaf3c" returntype="Interval" outname="y">v.y</function><function name="vec4z_uid4ebeaf3c" returntype="Interval" outname="z">v.z</function><function name="vec4w_uid4ebeaf3c" returntype="Interval" outname="w">v.w</function></language></functions>
					</node><node type="predefined" title="a - b" id="18">
						<location x="-233" y="-27"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2_uid4ebeaf3c" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2_uid4ebeaf3c" returntype="float" outname="o">return a-b;</function></language><language name="prediction"><function name="diff2_uid4ebeaf3c" returntype="Interval" outname="o">a-b</function></language></functions>
					</node><node type="preview" title="Preview" id="19">
						<location x="301" y="-224"></location>
						<size width="437" height="388"></size><image offsety="-89.68863689596408" offsetx="-129.1164631636013" zoom="1.1918176537727232"></image><view mode="iso" perspective="sideview_zup"></view><depthslider value="50.0"></depthslider><grid selected="true"></grid><continous selected="false"></continous>
						<arguments><language name="scala"><argument name="d" datatype="Double"></argument><argument name="m" datatype="Material"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="result_uid4ebeaf3c" returntype="(Double, Material)" outname="result">(d,m)</function></language></functions>
					</node></nodes>
			<connections><connection>
						<in nodeid="19" connector="1"></in>
						<out nodeid="9" connector="0"></out>
					</connection><connection>
						<in nodeid="5" connector="1"></in>
						<out nodeid="18" connector="0"></out>
					</connection><connection>
						<in nodeid="6" connector="0"></in>
						<out nodeid="15" connector="0"></out>
					</connection><connection>
						<in nodeid="12" connector="1"></in>
						<out nodeid="9" connector="0"></out>
					</connection><connection>
						<in nodeid="18" connector="0"></in>
						<out nodeid="14" connector="2"></out>
					</connection><connection>
						<in nodeid="1" connector="0"></in>
						<out nodeid="13" connector="3"></out>
					</connection><connection>
						<in nodeid="16" connector="0"></in>
						<out nodeid="6" connector="0"></out>
					</connection><connection>
						<in nodeid="4" connector="0"></in>
						<out nodeid="5" connector="0"></out>
					</connection><connection>
						<in nodeid="3" connector="1"></in>
						<out nodeid="17" connector="0"></out>
					</connection><connection>
						<in nodeid="11" connector="0"></in>
						<out nodeid="13" connector="3"></out>
					</connection><connection>
						<in nodeid="15" connector="0"></in>
						<out nodeid="14" connector="0"></out>
					</connection><connection>
						<in nodeid="19" connector="0"></in>
						<out nodeid="4" connector="0"></out>
					</connection><connection>
						<in nodeid="3" connector="0"></in>
						<out nodeid="18" connector="0"></out>
					</connection><connection>
						<in nodeid="12" connector="0"></in>
						<out nodeid="16" connector="0"></out>
					</connection><connection>
						<in nodeid="7" connector="0"></in>
						<out nodeid="13" connector="1"></out>
					</connection><connection>
						<in nodeid="20" connector="0"></in>
						<out nodeid="7" connector="0"></out>
					</connection><connection>
						<in nodeid="16" connector="1"></in>
						<out nodeid="1" connector="0"></out>
					</connection><connection>
						<in nodeid="18" connector="1"></in>
						<out nodeid="14" connector="0"></out>
					</connection><connection>
						<in nodeid="15" connector="2"></in>
						<out nodeid="14" connector="2"></out>
					</connection><connection>
						<in nodeid="15" connector="1"></in>
						<out nodeid="14" connector="1"></out>
					</connection><connection>
						<in nodeid="7" connector="2"></in>
						<out nodeid="13" connector="3"></out>
					</connection><connection>
						<in nodeid="5" connector="0"></in>
						<out nodeid="11" connector="0"></out>
					</connection><connection>
						<in nodeid="7" connector="1"></in>
						<out nodeid="13" connector="2"></out>
					</connection><connection>
						<in nodeid="14" connector="0"></in>
						<out nodeid="20" connector="0"></out>
					</connection></connections>
		</document>