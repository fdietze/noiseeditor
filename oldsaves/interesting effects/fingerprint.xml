<?xml version='1.0' encoding='UTF-8'?>
<document>
			<module name="GameEngine"></module>
			<nodes><node type="predefined" title="3D Perlin Noise" id="1">
						<location x="177" y="204"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument><argument name="x" datatype="Double"></argument><argument name="y" datatype="Double"></argument><argument name="z" datatype="Double"></argument><argument name="add" datatype="Double"></argument><argument name="sub" datatype="Double"></argument></language><language name="glsl"><argument name="v" datatype="vec3"></argument><argument name="x" datatype="float"></argument><argument name="y" datatype="float"></argument><argument name="z" datatype="float"></argument><argument name="add" datatype="float"></argument><argument name="sub" datatype="float"></argument></language></arguments>

						<sliders>
							<slider name="size" formula="pow(256,((0.5-s)*2))" value="81"></slider><slider name="scale" formula="pow(256,((s-0.5)*2))" value="62"></slider><slider name="offset" formula="(s-0.5)*2" value="42"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="summedinputnoise3" returntype="Double" outname="o">(noise3((v + Vec3(x,y,z))*size)+offset)*scale/size + add - sub</function></language><language name="glsl"><function name="summedinputnoise3" returntype="float" outname="o">return (noise3((v + vec3(x,y,z))*size)+offset)*scale/size + add - sub;</function></language></functions>
					</node><node type="predefined" title="World coordinates" id="3">
						<location x="17" y="100"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							<slider name="scale" formula="pow(256,((0.5-s)*2))" value="50"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="scalesrcv" returntype="Vec3" outname="v">world   * scale</function><function name="scalesrcx" returntype="Double" outname="x">world.x * scale</function><function name="scalesrcy" returntype="Double" outname="y">world.y * scale</function><function name="scalesrcz" returntype="Double" outname="z">world.z * scale</function></language><language name="glsl"><function name="scalesrcv" returntype="vec3" outname="v">return world.xyz * scale;</function><function name="scalesrcx" returntype="float" outname="x">return world.x * scale;</function><function name="scalesrcy" returntype="float" outname="y">return world.y * scale;</function><function name="scalesrcz" returntype="float" outname="z">return world.z * scale;</function></language></functions>
					</node><node type="preview" title="Preview" id="4">
						<location x="635" y="50"></location>
						<size width="385" height="345"></size><image offsety="-147.22820196066334" offsetx="-510.63967649393857" zoom="0.13310000000000005"></image><view mode="iso" perspective="sideview_yup"></view><depthslider value="51.1"></depthslider>
						<arguments><language name="scala"><argument name="d" datatype="Double"></argument><argument name="m" datatype="Material"></argument></language><language name="glsl"><argument name="d" datatype="float"></argument><argument name="m" datatype="vec4"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="result" returntype="(Double, Material)" outname="result">(d,m)</function></language><language name="glsl"><function name="result" returntype="vec4" outname="result">return m;</function></language></functions>
					</node><node type="predefined" title="3D Perlin Noise" id="2">
						<location x="414" y="201"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument><argument name="x" datatype="Double"></argument><argument name="y" datatype="Double"></argument><argument name="z" datatype="Double"></argument><argument name="add" datatype="Double"></argument><argument name="sub" datatype="Double"></argument></language><language name="glsl"><argument name="v" datatype="vec3"></argument><argument name="x" datatype="float"></argument><argument name="y" datatype="float"></argument><argument name="z" datatype="float"></argument><argument name="add" datatype="float"></argument><argument name="sub" datatype="float"></argument></language></arguments>

						<sliders>
							<slider name="size" formula="pow(256,((0.5-s)*2))" value="63"></slider><slider name="scale" formula="pow(256,((s-0.5)*2))" value="49"></slider><slider name="offset" formula="(s-0.5)*2" value="51"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="summedinputnoise3" returntype="Double" outname="o">(noise3((v + Vec3(x,y,z))*size)+offset)*scale/size + add - sub</function></language><language name="glsl"><function name="summedinputnoise3" returntype="float" outname="o">return (noise3((v + vec3(x,y,z))*size)+offset)*scale/size + add - sub;</function></language></functions>
					</node></nodes>
			<connections><connection>
						<in nodeid="4" connector="0"></in>
						<out nodeid="2" connector="0"></out>
					</connection><connection>
						<in nodeid="2" connector="3"></in>
						<out nodeid="1" connector="0"></out>
					</connection><connection>
						<in nodeid="2" connector="2"></in>
						<out nodeid="1" connector="0"></out>
					</connection><connection>
						<in nodeid="2" connector="0"></in>
						<out nodeid="3" connector="0"></out>
					</connection><connection>
						<in nodeid="1" connector="0"></in>
						<out nodeid="3" connector="0"></out>
					</connection><connection>
						<in nodeid="2" connector="1"></in>
						<out nodeid="1" connector="0"></out>
					</connection></connections>
		</document>