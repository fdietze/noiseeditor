<?xml version='1.0' encoding='UTF-8'?>
<document>
			<nodes><node type="preview" title="Preview" id="4">
						<pos x="853" y="35"></pos>
						<size width="442" height="704"></size><image offsety="170.46376" offsetx="15.976653" zoom="0.0032349161"></image><view selected="valuesclamped"></view><zslider value="50"></zslider>
						<sliders>
							
						</sliders>
		
						<intypes>
							<intype type="d:Float"></intype><intype type="m:Material"></intype>
						</intypes>
		
						<functions>
							
						</functions>
					</node><node type="predefined" title="Feature Source" id="3">
						<pos x="5" y="4"></pos>
						
						<sliders>
							<slider name="scale" value="50"></slider><slider name="x" value="50"></slider><slider name="y" value="50"></slider><slider name="z" value="50"></slider>
						</sliders>
		
						<intypes>
							
						</intypes>
		
						<functions>
							<function name="fsrcv_t1309428937_t1309431402_t1309432915_t1309435462_t1309436660_t1309437545_t1309442920" outname="v" outtype="Vec3">(source + (Vec3(x,y,z)-0.5f)*256f) * (pow(256,((0.5f-scale)*2f)))</function><function name="fsrcx_t1309428937_t1309431402_t1309432915_t1309435462_t1309436660_t1309437545_t1309442920" outname="x" outtype="Float">(source.x + (x-0.5f)*256f) * (pow(256,((0.5f-scale)*2f)))</function><function name="fsrcy_t1309428937_t1309431402_t1309432915_t1309435462_t1309436660_t1309437545_t1309442920" outname="y" outtype="Float">(source.y + (y-0.5f)*256f) * (pow(256,((0.5f-scale)*2f)))</function><function name="fsrcz_t1309428937_t1309431402_t1309432915_t1309435462_t1309436660_t1309437545_t1309442920" outname="z" outtype="Float">(source.z + (z-0.5f)*256f) * (pow(256,((0.5f-scale)*2f)))</function>
						</functions>
					</node><node type="custom" title="Custom" id="5">
						<pos x="202" y="35"></pos>
						<size width="639" height="695"></size>
						<sliders>
							<slider name="s1" value="62"></slider><slider name="s2" value="13"></slider><slider name="s3" value="50"></slider>
						</sliders>
		
						<intypes>
							<intype type="a:Float"></intype><intype type="b:Float"></intype><intype type="c:Float"></intype><intype type="d:Float"></intype>
						</intypes>
		
						<functions>
							<function name="custom_f5_t1309442920" outname=" " outtype="Float">object gradients {
	//(for(i &lt;- 0 until steps) yield { val a = i*2*Pi/steps.toFloat; Vec2(cos(a),sin(a)) }).toArray
	val g2d16 = Array(Vec2(1.0f, 0.0f), Vec2(0.9238795f, 0.38268346f), Vec2(0.70710677f, 0.70710677f), Vec2(0.38268343f, 0.9238795f), Vec2(-4.371139E-8f, 1.0f), Vec2(-0.38268352f, 0.9238795f), Vec2(-0.70710677f, 0.70710677f), Vec2(-0.9238796f, 0.38268328f), Vec2(-1.0f, -8.742278E-8f), Vec2(-0.9238795f, -0.38268343f), Vec2(-0.70710665f, -0.7071069f), Vec2(-0.38268313f, -0.9238797f), Vec2(1.1924881E-8f, -1.0f), Vec2(0.3826836f, -0.92387944f), Vec2(0.707107f, -0.70710653f), Vec2(0.92387956f, -0.38268343f))
} 

def noise2(pos:Vec2,seed:Int=0) = {
	def kernel(v:Vec2, gradient:Vec2) = {
		import v.{x,y}
		val t = 1f-(x*x/(s1*s1) + y*y/(s1*s1))
		if( t &gt; 0 )
			t*t*t*t*(gradient.x * x + gradient.y * y)
		else
			0f
	}
	def hash(k:Int,seed:Int=0) = (((k*0x12345678) &gt;&gt;&gt; (k*0x87754351))^seed) &amp; 0x7FFFFFFF

	def gradient(vertex:Vec2i) = {
		gradients.g2d16((  hash(hash(vertex.x,seed) + vertex.y,seed)  ) &amp; 15)
	}

	def fastfloor(x:Float):Int = if(x &gt; 0) x.toInt else (x-1).toInt


	val vertex1 = Vec2i(fastfloor(pos.x)  , fastfloor(pos.y))
	val vertex2 = Vec2i(fastfloor(pos.x)+1, fastfloor(pos.y))
	val vertex3 = Vec2i(fastfloor(pos.x)  , fastfloor(pos.y)+1)
	val vertex4 = Vec2i(fastfloor(pos.x)+1, fastfloor(pos.y)+1)

	(kernel(pos-vertex1, gradient(vertex1)) +
	kernel(pos-vertex2, gradient(vertex2)) +
	kernel(pos-vertex3, gradient(vertex3)) +
	kernel(pos-vertex4, gradient(vertex4)))*3.1604938271604937f
}

noise2(Vec2(a,b),(s2*100).toInt)

</function>
						</functions>
					</node></nodes>
			<connections><connection>
						<in nodeid="5" connector="0"></in>
						<out nodeid="3" connector="1"></out>
					</connection><connection>
						<in nodeid="5" connector="1"></in>
						<out nodeid="3" connector="2"></out>
					</connection><connection>
						<in nodeid="4" connector="0"></in>
						<out nodeid="5" connector="0"></out>
					</connection></connections>
		</document>