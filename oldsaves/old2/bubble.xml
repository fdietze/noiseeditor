<?xml version='1.0' encoding='UTF-8'?>
<document>
			<module name="GameEngine"></module>
			<nodes><node type="predefined" title="World coordinates" id="1">
						<location x="12" y="37"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="scale" formula="pow(256,((0.5-s)*2))" value="60"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="scalesrcv" returntype="Vec3" outname="v">world   * scale</function><function name="scalesrcx" returntype="Double" outname="x">world.x * scale</function><function name="scalesrcy" returntype="Double" outname="y">world.y * scale</function><function name="scalesrcz" returntype="Double" outname="z">world.z * scale</function></language><language name="glsl"><function name="scalesrcv" returntype="vec3" outname="v">return world.xyz * scale;</function><function name="scalesrcx" returntype="float" outname="x">return world.x * scale;</function><function name="scalesrcy" returntype="float" outname="y">return world.y * scale;</function><function name="scalesrcz" returntype="float" outname="z">return world.z * scale;</function></language><language name="prediction"><function name="scalesrcv" returntype="Volume" outname="v">world   * scale</function><function name="scalesrcx" returntype="Interval" outname="x">world.x * scale</function><function name="scalesrcy" returntype="Interval" outname="y">world.y * scale</function><function name="scalesrcz" returntype="Interval" outname="z">world.z * scale</function></language></functions>
					</node><node type="preview" title="Preview" id="3">
						<location x="485" y="2"></location>
						<size width="362" height="343"></size><image offsety="-45.688142884221435" offsetx="-51.77273902638298" zoom="0.3138428376721002"></image><view mode="isodepth" perspective="sideview_zup"></view><depthslider value="50.0"></depthslider>
						<arguments><language name="scala"><argument name="d" datatype="Double"></argument><argument name="m" datatype="Material"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="result" returntype="(Double, Material)" outname="result">(d,m)</function></language></functions>
					</node><node type="predefined" title="Max2" id="7">
						<location x="429" y="98"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="max2" returntype="Double" outname="o">max(a,b)</function></language><language name="glsl"><function name="max2" returntype="float" outname="o">return max(a,b);</function></language><language name="prediction"><function name="max2" returntype="Interval" outname="o">intervalmax(a,b)</function></language></functions>
					</node><node type="predefined" title="Sphere" id="2">
						<location x="181" y="17"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument></language><language name="glsl"><argument name="v" datatype="vec3"></argument></language><language name="prediction"><argument name="v" datatype="Volume"></argument></language></arguments>

						<sliders>
							<slider name="radius" formula="pow(256,((s-0.5)*2))" value="74"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="sphere" returntype="Double" outname="o">radius-sqrt(dot(v,v))</function></language><language name="glsl"><function name="sphere" returntype="float" outname="o">return radius-sqrt(dot(v,v));</function></language><language name="prediction"><function name="sphere" returntype="Interval" outname="o">radius-intervalsqrt(volumedot(v,v))</function></language></functions>
					</node><node type="predefined" title="3D Perlin Noise" id="6">
						<location x="179" y="91"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument><argument name="x" datatype="Double"></argument><argument name="y" datatype="Double"></argument><argument name="z" datatype="Double"></argument><argument name="add" datatype="Double"></argument><argument name="sub" datatype="Double"></argument></language><language name="glsl"><argument name="v" datatype="vec3"></argument><argument name="x" datatype="float"></argument><argument name="y" datatype="float"></argument><argument name="z" datatype="float"></argument><argument name="add" datatype="float"></argument><argument name="sub" datatype="float"></argument></language><language name="prediction"><argument name="v" datatype="Volume"></argument><argument name="x" datatype="Interval"></argument><argument name="y" datatype="Interval"></argument><argument name="z" datatype="Interval"></argument><argument name="add" datatype="Interval"></argument><argument name="sub" datatype="Interval"></argument></language></arguments>

						<sliders>
							<slider name="size" formula="pow(256,((0.5-s)*2))" value="59"></slider><slider name="scale" formula="pow(256,((s-0.5)*2))" value="58"></slider><slider name="offset" formula="(s-0.5)*2" value="14"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="perlinnoise3" returntype="Double" outname="o">(noise3((v + Vec3(x,y,z))*size)+offset)*scale/size + add - sub</function></language><language name="glsl"><function name="perlinnoise3" returntype="float" outname="o">return (noise3((v + vec3(x,y,z))*size)+offset)*scale/size + add - sub;</function></language><language name="prediction"><function name="perlinnoise3" returntype="Interval" outname="o">(noise3_prediction((v + Volume(x,y,z))*size)+offset)*scale/size + add - sub</function></language></functions>
					</node><node type="predefined" title="Diff2" id="5">
						<location x="376" y="8"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2" returntype="float" outname="o">return a-b;</function></language><language name="prediction"><function name="diff2" returntype="Interval" outname="o">a-b</function></language></functions>
					</node></nodes>
			<connections><connection>
						<in nodeid="7" connector="1"></in>
						<out nodeid="6" connector="0"></out>
					</connection><connection>
						<in nodeid="7" connector="0"></in>
						<out nodeid="5" connector="0"></out>
					</connection><connection>
						<in nodeid="5" connector="1"></in>
						<out nodeid="2" connector="0"></out>
					</connection><connection>
						<in nodeid="2" connector="0"></in>
						<out nodeid="1" connector="0"></out>
					</connection><connection>
						<in nodeid="6" connector="5"></in>
						<out nodeid="1" connector="3"></out>
					</connection><connection>
						<in nodeid="6" connector="0"></in>
						<out nodeid="1" connector="0"></out>
					</connection><connection>
						<in nodeid="3" connector="0"></in>
						<out nodeid="7" connector="0"></out>
					</connection></connections>
		</document>