<?xml version='1.0' encoding='UTF-8'?>
<document>
			<module name="GameEngine"></module>
			<nodes><node type="predefined" title="Constant Exp" id="10">
						<location x="367" y="272"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="value" formula="pow(256,((s-0.5)*2))" value="74"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="constantexp" returntype="Double" outname="o">value</function></language><language name="glsl"><function name="constantexp" returntype="float" outname="o">return value;</function></language><language name="prediction"><function name="constantexp" returntype="Interval" outname="o">Interval(value,value)</function></language></functions>
					</node><node type="predefined" title="Sum2" id="11">
						<location x="502" y="148"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="sum2" returntype="Double" outname="o">a+b</function></language><language name="glsl"><function name="sum2" returntype="float" outname="o">return a+b;</function></language><language name="prediction"><function name="sum2" returntype="Interval" outname="o">a+b</function></language></functions>
					</node><node type="predefined" title="World coordinates" id="7">
						<location x="-206" y="334"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language><language name="prediction"></language></arguments>

						<sliders>
							<slider name="scale" formula="pow(256,((0.5-s)*2))" value="50"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="scalesrcv" returntype="Vec3" outname="v">world   * scale</function><function name="scalesrcx" returntype="Double" outname="x">world.x * scale</function><function name="scalesrcy" returntype="Double" outname="y">world.y * scale</function><function name="scalesrcz" returntype="Double" outname="z">world.z * scale</function></language><language name="glsl"><function name="scalesrcv" returntype="vec3" outname="v">return world.xyz * scale;</function><function name="scalesrcx" returntype="float" outname="x">return world.x * scale;</function><function name="scalesrcy" returntype="float" outname="y">return world.y * scale;</function><function name="scalesrcz" returntype="float" outname="z">return world.z * scale;</function></language><language name="prediction"><function name="scalesrcv" returntype="Volume" outname="v">world   * scale</function><function name="scalesrcx" returntype="Interval" outname="x">world.x * scale</function><function name="scalesrcy" returntype="Interval" outname="y">world.y * scale</function><function name="scalesrcz" returntype="Interval" outname="z">world.z * scale</function></language></functions>
					</node><node type="predefined" title="Mix Materials" id="15">
						<location x="642" y="454"></location>
						
						<arguments><language name="scala"><argument name="m1" datatype="Material"></argument><argument name="t" datatype="Double"></argument><argument name="m2" datatype="Material"></argument></language><language name="glsl"><argument name="m1" datatype="vec4"></argument><argument name="t" datatype="float"></argument><argument name="m2" datatype="vec4"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matthreshold" returntype="Material" outname="m">if(t &gt;= 0) m1 else m2;</function></language><language name="glsl"><function name="matthreshold" returntype="vec4" outname="m">return t &gt;= 0 ? m1 : m2;</function></language></functions>
					</node><node type="predefined" title="Diff2" id="9">
						<location x="572" y="235"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="diff2" returntype="Double" outname="o">a-b</function></language><language name="glsl"><function name="diff2" returntype="float" outname="o">return a-b;</function></language><language name="prediction"><function name="diff2" returntype="Interval" outname="o">a-b</function></language></functions>
					</node><node type="preview" title="Preview" id="6">
						<location x="832" y="-11"></location>
						<size width="362" height="343"></size><image offsety="-17.239402629900006" offsetx="-26.949593100000016" zoom="0.16105100000000003"></image><view mode="iso" perspective="sideview_yup"></view><depthslider value="50.0"></depthslider>
						<arguments><language name="scala"><argument name="d" datatype="Double"></argument><argument name="m" datatype="Material"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="result" returntype="(Double, Material)" outname="result">(d,m)</function></language></functions>
					</node><node type="custom" title="Custom" id="12">
						<location x="159" y="494"></location>
						<size width="194" height="192"></size>
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument><argument name="c" datatype="Double"></argument></language></arguments>

						<sliders>
							<slider name="lin1" formula="s" value="28"></slider><slider name="lin2" formula="s" value="50"></slider><slider name="exp1" formula="pow(256,((s-0.5)*2))" value="50"></slider><slider name="exp2" formula="pow(256,((s-0.5)*2))" value="50"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="custom_f12" returntype="Double" outname="o">-10*cos(v.x*Pi/10)-v.y-10</function></language></functions>
					</node><node type="custom" title="Custom" id="8">
						<location x="69" y="211"></location>
						<size width="282" height="248"></size>
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument><argument name="c" datatype="Double"></argument></language></arguments>

						<sliders>
							<slider name="lin1" formula="s" value="50"></slider><slider name="lin2" formula="s" value="50"></slider><slider name="exp1" formula="pow(256,((s-0.5)*2))" value="50"></slider><slider name="exp2" formula="pow(256,((s-0.5)*2))" value="50"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="custom_f8" returntype="Double" outname="o">{
val v1 = Vec3(-10,0,0)
val v2 = Vec3( 10,0,0)
min(length(v1-v),length(v2-v))
}
</function></language></functions>
					</node><node type="predefined" title="Max2" id="13">
						<location x="697" y="246"></location>
						
						<arguments><language name="scala"><argument name="a" datatype="Double"></argument><argument name="b" datatype="Double"></argument></language><language name="glsl"><argument name="a" datatype="float"></argument><argument name="b" datatype="float"></argument></language><language name="prediction"><argument name="a" datatype="Interval"></argument><argument name="b" datatype="Interval"></argument></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="max2" returntype="Double" outname="o">max(a,b)</function></language><language name="glsl"><function name="max2" returntype="float" outname="o">return max(a,b);</function></language><language name="prediction"><function name="max2" returntype="Interval" outname="o">intervalmax(a,b)</function></language></functions>
					</node><node type="predefined" title="Stone" id="1">
						<location x="546" y="435"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matstone" returntype="Material" outname="m">Material(0x8e8e8e);</function></language><language name="glsl"><function name="matstone" returntype="vec4" outname="m">return vec4(0.56, 0.56, 0.56, 0.0);</function></language></functions>
					</node><node type="predefined" title="3D Perlin Noise" id="2">
						<location x="262" y="10"></location>
						
						<arguments><language name="scala"><argument name="v" datatype="Vec3"></argument><argument name="x" datatype="Double"></argument><argument name="y" datatype="Double"></argument><argument name="z" datatype="Double"></argument><argument name="add" datatype="Double"></argument><argument name="sub" datatype="Double"></argument></language><language name="glsl"><argument name="v" datatype="vec3"></argument><argument name="x" datatype="float"></argument><argument name="y" datatype="float"></argument><argument name="z" datatype="float"></argument><argument name="add" datatype="float"></argument><argument name="sub" datatype="float"></argument></language><language name="prediction"><argument name="v" datatype="Volume"></argument><argument name="x" datatype="Interval"></argument><argument name="y" datatype="Interval"></argument><argument name="z" datatype="Interval"></argument><argument name="add" datatype="Interval"></argument><argument name="sub" datatype="Interval"></argument></language></arguments>

						<sliders>
							<slider name="size" formula="pow(256,((0.5-s)*2))" value="65"></slider><slider name="scale" formula="pow(256,((s-0.5)*2))" value="40"></slider><slider name="offset" formula="(s-0.5)*2" value="50"></slider>
						</sliders>
		
						<functions><language name="scala"><function name="perlinnoise3" returntype="Double" outname="o">(noise3((v + Vec3(x,y,z))*size)+offset)*scale/size + add - sub</function></language><language name="glsl"><function name="perlinnoise3" returntype="float" outname="o">return (noise3((v + vec3(x,y,z))*size)+offset)*scale/size + add - sub;</function></language><language name="prediction"><function name="perlinnoise3" returntype="Interval" outname="o">(noise3_prediction((v + Volume(x,y,z))*size)+offset)*scale/size + add - sub</function></language></functions>
					</node><node type="predefined" title="Earth" id="14">
						<location x="547" y="549"></location>
						
						<arguments><language name="scala"></language><language name="glsl"></language></arguments>

						<sliders>
							
						</sliders>
		
						<functions><language name="scala"><function name="matearth" returntype="Material" outname="m">Material(0x5a3910);</function></language><language name="glsl"><function name="matearth" returntype="vec4" outname="m">return vec4(0.35, 0.22, 0.06, 0.0);</function></language></functions>
					</node></nodes>
			<connections><connection>
						<in nodeid="9" connector="0"></in>
						<out nodeid="11" connector="0"></out>
					</connection><connection>
						<in nodeid="13" connector="1"></in>
						<out nodeid="12" connector="0"></out>
					</connection><connection>
						<in nodeid="15" connector="2"></in>
						<out nodeid="14" connector="0"></out>
					</connection><connection>
						<in nodeid="9" connector="1"></in>
						<out nodeid="10" connector="0"></out>
					</connection><connection>
						<in nodeid="8" connector="0"></in>
						<out nodeid="7" connector="0"></out>
					</connection><connection>
						<in nodeid="6" connector="1"></in>
						<out nodeid="15" connector="0"></out>
					</connection><connection>
						<in nodeid="15" connector="0"></in>
						<out nodeid="1" connector="0"></out>
					</connection><connection>
						<in nodeid="2" connector="0"></in>
						<out nodeid="7" connector="0"></out>
					</connection><connection>
						<in nodeid="11" connector="1"></in>
						<out nodeid="8" connector="0"></out>
					</connection><connection>
						<in nodeid="6" connector="0"></in>
						<out nodeid="13" connector="0"></out>
					</connection><connection>
						<in nodeid="15" connector="1"></in>
						<out nodeid="12" connector="0"></out>
					</connection><connection>
						<in nodeid="13" connector="0"></in>
						<out nodeid="9" connector="0"></out>
					</connection><connection>
						<in nodeid="12" connector="0"></in>
						<out nodeid="7" connector="0"></out>
					</connection><connection>
						<in nodeid="11" connector="0"></in>
						<out nodeid="2" connector="0"></out>
					</connection></connections>
		</document>